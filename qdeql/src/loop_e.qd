- Set a byte to 105 (the lowercase letter i, in ASCII).
----- ----- ----- ----- ----- ----- ----- ----- ----- -----
----- ----- ----- ----- ----- ----- ----- ----- ----- -----
----- ----- ----- ----- ----- ----- ----- ----- ----- -----

\=/ Get a new zero byte to write on, now active.

-= Set the new byte to 50, the number of i's we want to print.
-=-=-=-=-=
-=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-=
-=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-=
-=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-=
-=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-=
-=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-=
-=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-=
-=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-=
-=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-= -=-=-=-=-=

\ While the count is positive... (queue is now: << letter count 0 0 <<)

 ==\/ << 0 letter count <<
 =    << letter count 0 <<
 \    << count 0 letter 0 0 <<
  ===
 /    << 0 count 0 letter <<
 ===  << letter 0 count 0 << (the zeroes are to become copies of letter) 

 \ While letter is positive... (<< copy1 count copy2 letter 0 0 <<)
  ====\/\/ (<< copy1 count copy2 letter <<)

  add 1 to copy1 by decrementing 255 times
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-=

  (<< copy2 letter copy1 count <<)

  add 1 to copy2 the same way
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-===
  -===-===-===-===-=== -===-===-===-===-=== -===-===-===-===-

 (<< letter copy1 count copy2 <<)

  - decrement letter (<< copy1 count copy2 letter <<)
  === get back to letter for the test (<< letter copy1 count copy2 <<)
 /

 (<< copy1 count copy2 <<)
 * print copy1 (<< count copy2 <<)
 -= decrement count and move count to the front for the test

 now copy2 is letter and we're ready for the test
/

(<< letter <<)

Let's decrement letter by 95 so we can print a newline and end the 
program nicely.

----- ----- ----- ----- ----- ----- ----- ----- -----
----- ----- ----- ----- ----- ----- ----- ----- -----
-----

*

Done, and the queue is all nice and clean!
